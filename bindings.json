{
  "name": "deno_sdl2",
  "littleEndian": true,
  "symbols": {
    "do_task": {
      "parameters": [{ "structenum": { "ident": "CanvasTask" } }],
      "result": "void",
      "nonBlocking": false
    },
    "query_texture_width": {
      "parameters": ["u32"],
      "result": "i32",
      "nonBlocking": false
    },
    "update_texture": {
      "parameters": ["buffer", "usize", "u32"],
      "result": "void",
      "nonBlocking": false
    },
    "query_window_width": {
      "parameters": [],
      "result": "u32",
      "nonBlocking": false
    },
    "query_texture_format": {
      "parameters": ["u32"],
      "result": "i32",
      "nonBlocking": false
    },
    "query_window_height": {
      "parameters": [],
      "result": "u32",
      "nonBlocking": false
    },
    "init": {
      "parameters": [
        { "structenum": { "ident": "WindowOptions" } },
        { "structenum": { "ident": "CanvasOptions" } }
      ],
      "result": "void",
      "nonBlocking": false
    },
    "poll_events": {
      "parameters": [],
      "result": "usize",
      "nonBlocking": false
    },
    "query_texture_access": {
      "parameters": ["u32"],
      "result": "i32",
      "nonBlocking": false
    },
    "query_texture_height": {
      "parameters": ["u32"],
      "result": "i32",
      "nonBlocking": false
    },
    "fill_events": {
      "parameters": ["buffermut"],
      "result": "void",
      "nonBlocking": false
    }
  },
  "typeDefs": {
    "OptionRectangle": {
      "width": "Option",
      "x": "i32",
      "y": "i32",
      "height": "Option"
    },
    "CanvasFontSize": {},
    "Rectangle": { "width": "u32", "x": "i32", "height": "u32", "y": "i32" },
    "CanvasOptions": { "software": "bool" },
    "CanvasPoint": { "x": "i32", "y": "i32" },
    "CanvasTask": {},
    "CanvasFontPartial": {},
    "CanvasColor": { "b": "u8", "a": "u8", "r": "u8", "g": "u8" },
    "CanvasEvent": {},
    "WindowOptions": {
      "maximized": "bool",
      "resizable": "bool",
      "centered": "bool",
      "height": "u32",
      "title": "String",
      "fullscreen": "bool",
      "hidden": "bool",
      "width": "u32",
      "flags": "Option",
      "minimized": "bool"
    }
  },
  "tsTypes": {
    "CanvasPoint": "export type CanvasPoint = {\n    x: number;\n  y: number;\n};",
    "CanvasColor": "export type CanvasColor = {\n    r: number;\n  g: number;\n  b: number;\n  a: number;\n};",
    "CanvasOptions": "/**\n  * https://rust-sdl2.github.io/rust-sdl2/sdl2/render/struct.CanvasBuilder.html\n  * Canvas Builder configuration\n  **/\nexport type CanvasOptions = {\n    software: boolean;\n};",
    "CanvasFontPartial": "export type CanvasFontPartial =  { solid: {\n   color: CanvasColor;\n} }  |\n { shaded: {\n   color: CanvasColor;\n  background: CanvasColor;\n} }  |\n { blended: {\n   color: CanvasColor;\n} };",
    "CanvasEvent": "export type CanvasEvent =   \"quit\"  |\n  \"app_terminating\"  |\n  \"app_low_memory\"  |\n  \"app_will_enter_background\"  |\n  \"app_did_enter_background\"  |\n  \"app_will_enter_foreground\"  |\n { resized: {\n   width: number;\n  height: number;\n} }  |\n { key_up: {\n   keycode: number | undefined | null;\n  scancode: number | undefined | null;\n  mod: number;\n  repeat: boolean;\n} }  |\n { key_down: {\n   keycode: number | undefined | null;\n  scancode: number | undefined | null;\n  mod: number;\n  repeat: boolean;\n} }  |\n { mouse_motion: {\n   which: number;\n  x: number;\n  y: number;\n  xrel: number;\n  yrel: number;\n  state: number;\n} }  |\n { mouse_button_up: {\n   x: number;\n  y: number;\n  clicks: number;\n  which: number;\n  button: number;\n} }  |\n { mouse_button_down: {\n   x: number;\n  y: number;\n  clicks: number;\n  which: number;\n  button: number;\n} }  |\n { mouse_wheel: {\n   x: number;\n  y: number;\n  which: number;\n  direction: number;\n} }  |\n  \"unknown\";",
    "CanvasFontSize": "export type CanvasFontSize =   \"normal\"  |\n  \"bold\"  |\n  \"italic\"  |\n  \"underline\"  |\n  \"strikethrough\";",
    "CanvasTask": "export type CanvasTask =   \"present\"  |\n { setDrawColor: {\n   r: number;\n  g: number;\n  b: number;\n  a: number;\n} }  |\n { setScale: {\n   x: number;\n  y: number;\n} }  |\n { drawPoint: {\n   x: number;\n  y: number;\n} }  |\n { drawPoints: {\n   points: Array<CanvasPoint>;\n} }  |\n { drawLine: {\n   p1: CanvasPoint;\n  p2: CanvasPoint;\n} }  |\n { drawLines: {\n   points: Array<CanvasPoint>;\n} }  |\n { drawRect: {\n   x: number;\n  y: number;\n  width: number;\n  height: number;\n} }  |\n { drawRects: {\n   rects: Array<Rectangle>;\n} }  |\n { fillRect: {\n   x: number;\n  y: number;\n  width: number;\n  height: number;\n} }  |\n { fillRects: {\n   rects: Array<Rectangle>;\n} }  |\n  \"clear\"  |\n  \"quit\"  |\n  \"none\"  |\n { renderFont: {\n   text: string;\n  options: CanvasFontPartial;\n  path: string;\n  size: number;\n  style: CanvasFontSize | undefined | null;\n  index: number;\n} }  |\n { setCursor: {\n   index: number;\n  path: string;\n} }  |\n { playMusic: {\n   path: string;\n} }  |\n { createSurface: {\n   width: number;\n  height: number;\n  format: number;\n  index: number;\n} }  |\n { createSurfaceBitmap: {\n   path: string;\n  index: number;\n} }  |\n { loadSurface: {\n   path: string;\n  index: number;\n} }  |\n { createTexture: {\n   format: number | undefined | null;\n  access: number;\n  width: number;\n  height: number;\n  index: number;\n} }  |\n { createTextureSurface: {\n   surface: number;\n  index: number;\n} }  |\n { loadTexture: {\n   path: string;\n  index: number;\n} }  |\n { copyRect: {\n   texture: number;\n  rect1: Rectangle;\n  rect2: Rectangle;\n} }  |\n { setDisplayMode: {\n   width: number;\n  height: number;\n  rate: number;\n  format: number;\n} }  |\n { setTitle: {\n   title: string;\n} }  |\n { setIcon: {\n   icon: string;\n} }  |\n { setPosition: {\n   x: number;\n  y: number;\n} }  |\n { setSize: {\n   width: number;\n  height: number;\n} }  |\n { setMinimumSize: {\n   width: number;\n  height: number;\n} }  |\n  \"show\"  |\n  \"hide\"  |\n  \"raise\"  |\n  \"maximize\"  |\n  \"minimize\"  |\n  \"restore\"  |\n { setBrightness: {\n   brightness: number;\n} }  |\n { setOpacity: {\n   opacity: number;\n} };",
    "OptionRectangle": "export type OptionRectangle = {\n    x: number;\n  y: number;\n  width: number | undefined | null;\n  height: number | undefined | null;\n};",
    "WindowOptions": "/**\n  * https://docs.rs/sdl2/0.34.5/sdl2/video/struct.WindowBuilder.htm\n  * Window Builder configuration\n  **/\nexport type WindowOptions = {\n    title: string;\n  height: number;\n  width: number;\n  flags: number | undefined | null;\n  centered: boolean;\n  fullscreen: boolean;\n  hidden: boolean;\n  resizable: boolean;\n  minimized: boolean;\n  maximized: boolean;\n};",
    "Rectangle": "export type Rectangle = {\n    x: number;\n  y: number;\n  width: number;\n  height: number;\n};"
  }
}
